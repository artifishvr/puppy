---
import Layout from "../layouts/Layout.astro";
---

<Layout title="woof">
  <main>
    <div class="flex items-center justify-center min-h-screen w-full">
      <button
        class="text-5xl hover:scale-110 transition-transform"
        aria-label="Click to bark">🐕</button
      >
    </div>
    <div class="absolute bottom-2 left-4 text-sm">
      <p>
        with ❤️ by <a href="https://arti.gay" class="underline text-blue-300"
          >arti</a
        >
      </p>
      <p>
        barking from
        <a href="https://youtu.be/BfSmr4IaLsY" class="underline text-blue-300"
          >Kaustysaur</a
        >
      </p>
    </div>
  </main>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const button = document.querySelector("button");
      if (!button) return;
      button.addEventListener("click", onClick);
    });

    async function onClick() {
      const barks = ["/bark1.mp3", "/bark2.mp3", "/bark3.mp3", "/bark4.mp3"];
      const randomIndex = Math.floor(Math.random() * barks.length);
      const randomBark = barks[randomIndex];

      // i LOVE web audio
      const audioContext = new (window.AudioContext ||
        (window as any).webkitAudioContext)();
      const audio = new Audio(randomBark);
      audio.volume = 0.5;
      const source = audioContext.createMediaElementSource(audio);
      source.connect(audioContext.destination);

      try {
        if (audioContext.state === "suspended") {
          await audioContext.resume();
        }

        await new Promise((resolve, reject) => {
          audio.addEventListener("canplaythrough", resolve, { once: true });
          audio.addEventListener("error", reject, { once: true });
          audio.load();
        });

        await audio.play();

        await new Promise((resolve) => {
          audio.addEventListener("ended", resolve, { once: true });
        });
      } catch (error) {
        console.error("Audio playback failed:", error);
      }
    }
  </script>
</Layout>
